name: ${APP_NAME}
services:
    application:
        image: rjbaquirin/php:8.3-alpine
        build: 
            context: ./php/phptest1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        ports:
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '${APP_ROOT_DIR}:/app'
            - ./php/php83/php.ini:/usr/local/etc/php/php.ini
        depends_on:
            - mysql
            - redis
    mysql:
        image: 'mysql/mysql-server:8.0'        
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'boat-mysql:/var/lib/mysql'
            - ./mysql:/docker-entrypoint-initdb.d
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    soketi:
        image: 'quay.io/soketi/soketi:latest-16-alpine'
        environment:
            SOKETI_DEBUG: '${SOKETI_DEBUG:-1}'
            SOKETI_METRICS_SERVER_PORT: '9601'
            SOKETI_DEFAULT_APP_ID: '${PUSHER_APP_ID}'
            SOKETI_DEFAULT_APP_KEY: '${PUSHER_APP_KEY}'
            SOKETI_DEFAULT_APP_SECRET: '${PUSHER_APP_SECRET}'
        ports:
            - '${PUSHER_PORT:-6001}:6001'
            - '${PUSHER_METRICS_PORT:-9601}:9601'
        profiles: [websocket]
    redis:
        image: 'redis:alpine'        
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'boat-redis:/data'
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    caddy:
        image: caddy  # Use the official Caddy image
        restart: unless-stopped  # Restart container on failure
        volumes:
            - caddy_data:/data  # Persistent storage for Caddy configuration
            - caddy_config:/config  # Mount your Caddyfile
            - caddy_certs:/root/.caddy  # Persistent storage for TLS certificates (optional)
            - ./Caddyfile:/etc/caddy/Caddyfile  # Mount your Caddyfile
            - '${APP_ROOT_DIR}:/app' # Mount your Laravel application code (replace ../app with your path)
        ports:
        - '${APP_PORT:-80}:80' # Map container port 80 to host port 80 (HTTP)
        - '443:443'
        depends_on:
            - application
    queue-worker:
        image: rjbaquirin/php:8.3-alpine
        restart: always
        working_dir: /app
        volumes:
            - '${APP_ROOT_DIR}:/app'
        command: php artisan queue:work --sleep=1 --tries=3 --queue=high,default,low
        depends_on:
            - application
networks:
    default:
        name: ${APP_NAME}-network
        driver: bridge
volumes:
    boat-mysql:
        driver: local
    boat-redis:
        driver: local
    caddy_data:
        driver: local
    caddy_config:
        driver: local
    caddy_certs:
        driver: local